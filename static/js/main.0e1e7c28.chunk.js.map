{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvAPI","get","append_to_response","term","query","encodeURIComponent","moviesAPI","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","request","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e1e7c28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    margin-bottom: 50px;\n`;\n\nconst Title = styled.span`\n    font-size:16px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns:repeat(auto-fill,125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title,children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title:PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n      ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display:flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top:20px;\n    `;\n\nexport default () => (\n    <Container>\n     <span role=\"img\" aria-label=\"Loading\">⏰</span>\n    </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n      <Text color={color}>{text}</Text>\n    </Container>\n  );\n  \n  Message.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n  };\n  \n  export default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n      <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n    <>\n      <Helmet>\n        <title>Movies | Nomflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          <Helmet>\n            <title>Movies | Nomflix</title>\n          </Helmet>\n          {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n              {nowPlaying.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n              {upcoming.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n              {popular.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  imageUrl={movie.poster_path}\n                  title={movie.original_title}\n                  rating={movie.vote_average}\n                  year={movie.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n      )}\n    </>\n  );\n\nHomePresenter.propTypes = {\n    nowPlaying:PropTypes.array,\n    popular:PropTypes.array,\n    upcoming:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"0be6d339e964bc9c9196c87182eb8a44\",\n        language: \"en-US\"\n    }\n})\n\nexport const tvAPI = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    popular: () => api.get(\"tv/popular\"),\n    showDetail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const moviesAPI = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\n\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesAPI } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount(){\n        try {\n            const {data: {results: nowPlaying}} = await moviesAPI.nowPlaying();\n            const {data: {results: upcoming}} = await moviesAPI.upcoming();\n            const {data: {results: popular}} = await moviesAPI.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch {\n            this.setState( {\n                error: \"Can't find the movie information.\"\n            })\n\n        } finally {\n            this.setState( {\n                loading: false\n            });\n        }\n    }\n    \n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n    topRated:PropTypes.array,\n    popular:PropTypes.array,\n    airingToday:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvAPI } from \"api\";\n\nexport default class extends React.Component{\n    state={\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    };\n    async componentDidMount(){\n        try{\n            const {data: {results: topRated}} = await tvAPI.topRated();\n            const {data: {results: popular}} = await tvAPI.popular();\n            const {data: {results: airingToday}} = await tvAPI.airingToday();\n            this.setState({topRated,popular,airingToday});\n\n        } catch {\n            this.setState( {\n                error: \"Can't find TV show information.\"\n            })\n        } finally {\n            this.setState({loading:false});\n        }\n    }\n\n    render() {\n        const {topRated,popular,airingToday, loading, error} = this.state;\n\n        return (<TVPresenter \n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            loading={loading}\n            error={error}\n        />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\"\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width:100%;\n`;\n\nconst  SearchPresenter = ({\n    movieResults,tvResults,loading,searchTerm,handleSubmit,error,updateTerm\n}) => (\n<Container>\n  <Helmet> \n      <title>Search | Nomflix</title>\n    </Helmet> \n    <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n            />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n                            <Poster\n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date.substring(0, 4)}\n                          />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n        movieResults &&\n        tvResults.length === 0 &&\n        movieResults.length === 0 && (\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\n        )}\n      </>\n    )}\n</Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults:PropTypes.array,\n    tvResults:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string,\n    searchTerm:PropTypes.string,\n    handleSubmit:PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesAPI, tvAPI } from \"../../api\";\n\nexport default class extends React.Component{\n    state={\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = event => {\n        const {\n          target: { value }\n        } = event;\n        this.setState({\n          searchTerm: value\n        });\n      };\n    \n    searchByTerm = async() => {\n        const {searchTerm} = this.state;\n        this.setState({loading:true});\n        try{\n            const {data:{results: movieResults}} = await moviesAPI.search(searchTerm);\n            const {data:{results: tvResults}} = await tvAPI.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        }catch {\n            this.setState({error: \"Can't find results.\"})\n        } finally {\n            this.setState({loading:false});\n        }\n    };\n     \n    render() {\n        const {movieResults,tvResults,searchTerm, loading, error} = this.state;\n        return ( <SearchPresenter \n            movieResults={movieResults}\n            tvResults={tvResults}\n            searchTerm={searchTerm}\n            loading={loading}\n            error={error}\n            handleSubmit={this.handleSubmit}\n            updateTerm = {this.updateTerm}\n        />\n        );\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: #ffffff;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display:flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color: rgba(20,20,20,0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\n\nconst List = styled.ul `\n    display:flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 60px;\n    text-align: center;\n    border-bottom: 3px solid ${props => (props.current ? \"#FCA311\" : \"transparent\")};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 55px;\n    display:flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location : {pathname} } ) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n    <Helmet>\n      <title>Loading | Nomflix</title>\n    </Helmet>\n    <Loader />\n  </>\n  ) : (\n    <Container>\n        <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\n  \nDetailPresenter.propTypes = {\n    result:PropTypes.object,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesAPI, tvAPI } from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const { location: {pathname}} = props;\n        this.state = {\n        result: null,\n        loading: true,\n        error: null,\n        isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n    \n\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: {push}\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedId = parseInt(id);\n\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if(isMovie){\n                const request = await moviesAPI.movieDetail(parsedId);\n                result = request.data;\n            } else {\n                const request = await tvAPI.showDetail(parsedId);\n                result = request.data;\n            }\n        } catch {\n            this.setState({error:\"Can't find information.\"})\n        } finally {\n            this.setState({loading:false,result});\n        }\n    }\n\n    render() {\n        const {result, loading, error, isMovie} = this.state;\n        console.log(this.state);\n        return ( <DetailPresenter \n            result={result}\n            loading={loading}\n            error={error}\n            isMovie={isMovie}\n        />\n        );\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tv\" exact component={TV} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/tv/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle `\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        background-color: #000000;\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20,1);\n        color: #ffffff;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n      return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}